plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    namespace 'jp.co.yumemi.android.code_check'
    compileSdk 34

    defaultConfig {
        applicationId "jp.co.yumemi.android.codecheck"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        //noinspection DataBindingWithoutKapt
        dataBinding true
        viewBinding true
    }
}

dependencies {

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.material)
    implementation(libs.androidx.constraintlayout)

    /****** Recyclerview ******/
    implementation(libs.androidx.recyclerview)

    /****** lifecycle & ViewModel ******/
    implementation(libs.androidx.lifecycle.viewmodel.ktx)
    implementation(libs.androidx.lifecycle.livedata.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)

    /****** Android Navigation component ******/
    implementation(libs.androidx.navigation.fragment.ktx)
    implementation(libs.androidx.navigation.ui.ktx)

    /****** Dagger - Hilt ******/
    implementation(libs.hilt.android)
    implementation(libs.annotation)
    implementation(libs.core.ktx)
    ksp(libs.hilt.compiler)

    /****** AndroidX libraries ******/
    implementation(libs.androidx.window)
    implementation(libs.androidx.preference.ktx)

    /******  retrofit ******/
    implementation(libs.retrofit.core)
    implementation(libs.converter.gson)
    implementation(libs.gson)

    /******  coroutines ******/
    implementation(libs.kotlinx.coroutines.core)
    implementation(libs.kotlinx.coroutines.android)

    /******  Image Library ******/
    implementation(libs.coil.kt)

    /******  Room Library ******/
    implementation(libs.room.runtime)
    ksp(libs.room.compiler)
    implementation(libs.room.ktx)

    /****** lottie animations ******/
    implementation(libs.lottie)

    /****** ktor ******/
    implementation libs.ktor.client.android

    /****** ActivityTestRule ******/
    androidTestImplementation(libs.androidx.test.rules)
    androidTestImplementation(libs.androidx.test.runner)

    /****** Testing Library ******/
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    implementation(libs.androidx.test.ext)
    testImplementation(libs.junit.jupiter)
    androidTestImplementation(libs.androidx.test.espresso.core)
    androidTestImplementation(libs.androidx.espresso.contrib)
    androidTestImplementation(libs.hamcrest)
    implementation(libs.androidx.core.testing)
    androidTestImplementation(libs.androidx.fragment.testing)

    /****** Mockito for Test ******/
    testImplementation(libs.mockito.core)
    androidTestImplementation(libs.mockito.android)

    /****** Room DB Test ******/
    testImplementation(libs.androidx.room.testing)

    /****** Coroutine Test ******/
    implementation(libs.kotlinx.coroutines.test)
}
